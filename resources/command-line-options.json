{
  "help":    "Prints this usage text",
  "help-hidden ": " Show hidden options (intended for VerCors experts, proceed with caution!)",
  "version": "Prints version and build information",
  "help-passes": "Lists the pass keys available for options that take a pass key.",
  "quiet": "Instruct VerCors to only log errors.",
  "verbose": "Instruct VerCors to output debug information",
  "progress": "Print progress information, even if stdout is not a tty.",

  "verify": "Enable verification mode: instruct VerCors to verify the given files (default)",
  "more": "Always print the maximum amount of information about errors.",
  "lang": "{silver|pvl|llvm|i|java|c|systemc} Do not detect the language from the file extension, but force a specific language parser for all files",
  "backend": "{silicon|carbon} Set the backend to verify with (default: silicon)",
  "backend-file-base": "In addition to verification, output the resulting ASTs for the backend to files, appended with -<number>.<extension>",
  "backend-debug": "Instruct the backend to print as much debugging information as possible",
  "output-after-pass:<pass>=<path>": "Print the AST after a pass key",
  "output-before-pass:<pass>=<path>": "Print the AST before a pass key",
  "backend-option": "Provide custom flags to Viper",
  "skip-backend": "Stop VerCors successfully before the backend is used to verify the program",
  "skip-translation": "Stop VerCors successfully immediately after the file is parsed and resolved, and do no further processing",
  "skip-translation-after": "<pass> Stop VerCors successfully after executing the transformation pass with the supplied key",
  "skip-pass": "<pass> Skip the passes that have the supplied keys",
  "silicon-print-quantifier-stats": "<amount> Print quantifier instantiation statistics from Z3 via silicon, every <amount> instantiations, every 5 seconds. Implies --dev-silicon-num-verifiers 1",
  "silicon-quiet": "Disable various diagnostics of the silicon backend.",
  "bip-report-file": "<path> Write JavaBIP verification report to file, or standard out if \"-\" is used",
  "c-define": "<macro>=<defn>,... Pass -D options to the C preprocessor",
  "paths-simplify": "<simplify.pvl>,... Specify a chain of files to use that contain axiomatic simplification rules",
  "paths-simplify-after-relations": "<simplify.pvl>,... Specify a chain of files to use the contain axiomatic simplification rules, which will be applied after quantified integer relations are simplified",
  "path-adt": "<path> Use a custom directory that contains definitions for all internal types encoded as axiomatic datatypes (array, option, any, etc.)",
  "path-cc": "<path> Set the C compiler to use for preprocessing",
  "path-c-system": "<path> Set the include path for system headers (-isystem)",
  "no-std-class-path": "Remove the @jre (the default path to specified classes in the java runtime) and @source (the sources root computed via the package entry of submitted sources) entry",
  "class-path": "<path>|@jre|@source Add an entry to the sources class path",
  "path-z3": "<path> Set the location of the z3 binary",
  "path-boogie": "<path> Set the location of the boogie binary",
  "path-c-preprocessor": "<path> Set the location of the C preprocessor binary",

  "veymont": "Enable VeyMont mode: decompose the global program from the input files into several local programs that can be executed in parallel",
  "veymont-output": "<path>",

  "test": "Enable batch testing mode: execute all tests in a directory",
  "test-dir": "<path> The directory from which to run all tests",
  "test-filter-backend": "<backend>,...",
  "test-filter-include-suite": "<suite>,...",
  "test-filter-exclude-suite": "<suite>,...",
  "test-workers": "<value> Number of threads to start to run tests (default: 1)",
  "test-coverage": "Generate a coverage report",
  "test-failing-first": "When run twice with this option, VerCors will run the tests that failed the previous time first (cancelling a run is safe)",
  "test-generate-failing-run-configs": "Generates Intellij IDEA run configurations for tests that fail (and deletes recovered tests, cancelling a run is safe)",
  "test-ci-output": "Tailor the logging output for a CI run"
}