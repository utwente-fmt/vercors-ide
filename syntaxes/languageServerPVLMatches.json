[
  { "name": "storage.type", "match": "enum" },
  { "name": "storage.type", "match": "class" },
  { "name": "keyword.control.concurrency", "match": "seq_program" },
  { "name": "keyword.control.concurrency", "match": "kernel" },
  { "name": "keyword.control.concurrency", "match": "barrier" },
  { "name": "keyword.control.concurrency", "match": "invariant" },
  { "name": "variable.language", "match": "constructor" },
  { "name": "keyword.control.concurrency", "match": "run" },
  { "name": "keyword.control.concurrency", "match": "thread" },
  { "name": "keyword.control", "match": "if" },
  { "name": "keyword.control", "match": "else" },
  { "name": "keyword.control", "match": "while" },
  { "name": "keyword.control", "match": "for" },
  { "name": "keyword.control", "match": "goto" },
  { "name": "keyword.control", "match": "return" },
  { "name": "variable.language", "match": "vec" },
  { "name": "keyword.control.concurrency", "match": "par" },
  { "name": "keyword.control.concurrency", "match": "and" },
  { "name": "keyword.control.concurrency", "match": "parallel" },
  { "name": "keyword.control.concurrency", "match": "sequential" },
  { "name": "keyword.control", "match": "block" },
  { "name": "keyword.control.concurrency", "match": "lock" },
  { "name": "keyword.control.concurrency", "match": "unlock" },
  { "name": "keyword.control.concurrency", "match": "wait" },
  { "name": "keyword.control.concurrency", "match": "notify" },
  { "name": "keyword.control.concurrency", "match": "fork" },
  { "name": "keyword.control.concurrency", "match": "join" },
  { "name": "variable.language", "match": "this" },
  { "name": "variable.language", "match": "null" },
  { "name": "variable.language", "match": "true" },
  { "name": "variable.language", "match": "false" },
  { "name": "variable.language", "match": "current_thread" },
  { "name": "variable.language", "match": "current_thread" },
  { "name": "variable.language", "match": "owner" },
  { "name": "storage.modifier", "match": "global" },
  { "name": "storage.modifier", "match": "local" },
  { "name": "storage.modifier", "match": "static" },
  { "name": "storage.modifier", "match": "final" },
  { "name": "variable.language", "match": "unfolding" },
  { "name": "variable.language", "match": "unfolding" },
  { "name": "variable.language", "match": "in" },
  { "name": "variable.language", "match": "in" },
  { "name": "variable.language", "match": "new" },
  { "name": "variable.language", "match": "id" },
  { "name": "keyword.type", "match": "boolean" },
  { "name": "keyword.type", "match": "void" },
  { "name": "keyword.type", "match": "int" },
  { "name": "keyword.type", "match": "char" },
  { "name": "keyword.type", "match": "float32" },
  { "name": "keyword.type", "match": "float64" }
]
